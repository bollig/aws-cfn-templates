{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Simple toolset instance.", 
  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "InstanceType" : {
      "Description" : "Tool machine EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [
        "t1.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.xlarge", "m3.2xlarge",
        "c1.medium", "c1.xlarge",
        "cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "PythonVersion" : {
      "Description" : "Python version",
      "Type" : "String",
      "Default" : "3.3.2",
      "MinLength": "5",
      "MaxLength": "5",
      "AllowedPattern" : "[0-9]\\.[0-9]\\.[0-9]",
      "ConstraintDescription" : "must be semantic versioning."
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    } 
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64HVM" },
      "cc2.8xlarge" : { "Arch" : "64HVM" },
      "cg1.4xlarge" : { "Arch" : "64HVM" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"     : { "32" : "ami-5675ee3f", "64" : "ami-3275ee5b", "64HVM" : "ami-da76edb3" },
      "us-west-2"     : { "32" : "ami-d0be2ae0", "64" : "ami-ecbe2adc", "64HVM" : "ami-f4be2ac4" },
      "us-west-1"     : { "32" : "ami-d8d1fc9d", "64" : "ami-66d1fc23", "64HVM" : "ami-b0d6fbf5" },
      "eu-west-1"     : { "32" : "ami-6893991c", "64" : "ami-44939930", "64HVM" : "ami-a29298d6" },
      "ap-southeast-1": { "32" : "ami-a29ed2f0", "64" : "ami-aa9ed2f8", "64HVM" : "ami-ec9ed2be" },
      "ap-northeast-1": { "32" : "ami-0f3fbf0e", "64" : "ami-173fbf16", "64HVM" : "ami-833ebe82" },
      "ap-southeast-2": { "32" : "ami-383eaf02", "64" : "ami-363eaf0c", "64HVM" : "ami-ce3faef4" },
      "sa-east-1"     : { "32" : "ami-a56bb0b8", "64" : "ami-dd6bb0c0", "64HVM" : "ami-bb6bb0a6" }
    }

  },

  "Resources" : {

    "ConsoleMachine": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "Comment1" : "Configure the bootstrap helpers to install the Apache Web Server, Java, and Python",

        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "gcc47"              : [],
                "gcc47-c++"          : [],
                "bzip2-devel"        : [],
                "openssl-devel"      : [],
                "mysql55"            : [],
                "postgresql9"        : [],
                "git-all"            : [],
                "jq"                 : [],
                "java-1.7.0-openjdk" : [],
                "python27"           : [],
                "python27-devel"     : []
              }
            },

            "files" : {
              "/home/ec2-user/.aws-credential": {
                "content" : { "Fn::Join" : ["", [
                  "[default]\n",
                  "aws_access_key_id = YOUR_ACCESS_KEY\n",
                  "aws_secret_access_key = YOUR_SECRET_KEY\n"
                  ]]},
                "mode"  : "000644",
                "owner" : "ec2-user",
                "group" : "ec2-user"
              },
              "/etc/yum.repos.d/s3tools.repo": {
                "source" : "http://s3tools.org/repo/RHEL_6/s3tools.repo",
                "mode"  : "000644",
                "owner" : "root",
                "group" : "root"
              }
            },

            "sources" : {
              "/usr/local/src" : { "Fn::Join" : ["", [
                "http://python.org/ftp/python/",
                { "Ref" : "PythonVersion" },
                "/Python-", { "Ref" : "PythonVersion" }, ".tar.bz2"]]}
            }
          }
        }
      },

      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [
          {"Ref" : "SSHSecurityGroup"}
        ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "yum update -y\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Install packages\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r ConsoleMachine ",
          "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

          "alternatives --set java /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java\n",

          "curl -O http://python-distribute.org/distribute_setup.py\n",
          "python27 distribute_setup.py\n",
          "easy_install-2.7 pip\n",
          "pip-2.7 install virtualenv\n",

          "yum install -y s3cmd\n",

          "PYTHON_VERSION=", { "Ref" : "PythonVersion" }, "\n",
          "PYTHON_SRCDIR=/usr/local/src/Python-$PYTHON_VERSION\n",
          "PYTHON_INSTALL=/opt/python/Python-$PYTHON_VERSION\n",

          "cd $PYTHON_SRCDIR\n",
          "./configure --prefix $PYTHON_INSTALL\n",
          "make && make install\n",

          "# All is well so signal success\n",
          "/opt/aws/bin/cfn-signal -e 0 -r \"Tool Stack setup complete\" '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "ConsoleMachine",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "900"
      }
    },

    "SSHSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    }
  },

  "Outputs" : {
    "SSHToWebServer" : {
      "Value" : { "Fn::Join" :["", [
        "ssh -i $HOME/.ssh/", { "Ref" : "KeyName" }, ".pem",
        " ec2-user@", { "Fn::GetAtt" : [ "ConsoleMachine", "PublicDnsName" ]}
      ]] }, 
      "Description" : "SSH command to connect ConsoleMachine"
    }
  }

}
